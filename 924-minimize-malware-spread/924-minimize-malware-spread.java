class Solution {
    boolean flag=true;
    public int minMalwareSpread(int[][] graph, int[] initial) {
        
        int n=graph.length;
        boolean visit[]=new boolean[n];
        boolean init[]=new boolean[n];
        for(int a:initial){
            visit[a]=true;
            init[a]=true;
        }
        int count=0,ans=initial[0];
        for(int a:initial){
            ans=Math.min(ans,a);
            if(!visit[a]) continue;
            
            flag=true;
            boolean temp[]=new boolean[n];
            dfs(graph,a,visit,a,temp,init);
            visit[a]=flag;
        }
        for(int a:initial){
            if(!visit[a]) continue;
            boolean temp[]=new boolean[n];
            int num=dfs(graph,a,visit,a,temp,init);
            
            if(num>count){
                count=num;
                ans=a;
            }
            else if(num==count) ans=Math.min(ans,a);
            // System.out.println(a+" "+count);
        }
        return ans;
    }
    int dfs(int graph[][],int a,boolean visit[],int node,boolean temp[],boolean init[]){
        
        if(temp[a]) return 0;
        temp[a]=true;
        if(node!=a){
            visit[a]=false;
            if(init[a])flag=false;
        }
        
        int ans=0;
        for(int i=0;i<graph.length;i++){
            
            if(graph[a][i]==1)
            ans+=dfs(graph,i,visit,node,temp,init);
        }
        return ans+=1;
    }
}